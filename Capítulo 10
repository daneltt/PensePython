## Exercício 10.1

"""def nested_sum(listinha):
    listasomada = sum(listinha)
    return listasomada

lista1 = [1, 2]
lista2 = [3]
lista3 = [4, 5, 6]
listadef = lista1 + lista2 + lista3
print(listadef)
listadef2 = nested_sum(listadef)

print(listadef2)"""


## Exercício 10.2

"""def cumsum(listinha):
    newlist = []
    for i in range(len(listinha)):
        if i == 0:
            newlist.append(listinha[i])
        else:
            newlist.append(listinha[i] + newlist[i-1])
    return newlist


lista1 = [1, 2, 3]

print(lista1)

listadef = cumsum(lista1)

print(listadef)"""


## Exercício 10.3

"""def middle(listinha):
    meio = int(len(listinha) / 3)
    newlist = listinha[meio:meio*2]
    return newlist

lista1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

listadef = middle(lista1)

print(listadef)"""

## Exercício 10.4

"""def chop(listinha):
    comp = len(listinha) - 1
    del listinha[comp]
    del listinha[0]

lista1 = [1, 2, 3, 4, 5, 6]
print('Lista original: ', lista1)
chop(lista1)
print('Nova lista: ', lista1)"""

## Exercício 10.5

def is_sorted(listinha):
    i = 0
    while i < len(listinha)-1:
        if listinha[i+1] < listinha[i]:
            return False
        else:
            i = i + 1
    return True

lista1 = ['a', 'b', 'c', 'd', 'e', 'f', 'g']
lista2 = ['a', 'c', 'b', 'd', 'e', 'f', 'g']

print('Lista 2 está organizada!', is_sorted(lista1))
print('Lista 2 está organizada!', is_sorted(lista2))